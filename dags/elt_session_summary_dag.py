# -*- coding: utf-8 -*-
"""elt_session_summary_dag

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19CpSF1F1PpsEbckdQv2NmNpXoNdfRPN9
"""

from airflow import DAG
from airflow.decorators import task
from airflow.providers.snowflake.hooks.snowflake import SnowflakeHook
from datetime import datetime, timedelta
import logging

def get_snowflake_conn():
    snowflake_hook = SnowflakeHook(snowflake_conn_id='snowflake_conn')  # Your Snowflake connection ID
    return snowflake_hook.get_conn()

# Default DAG arguments
default_args = {
    'owner': 'Sreenidhi Hayagreevan',  # Your Name
    'start_date': datetime(2024, 10, 24),  # Updated start date
    'retries': 1,
    'retry_delay': timedelta(minutes=5),
}

# Define the DAG
with DAG(
    dag_id='elt_session_summary_dag',
    default_args=default_args,
    schedule_interval=None,  # Run on-demand or adjust as needed
    catchup=False
) as dag:

    @task
    def create_session_summary():
        conn = get_snowflake_conn()
        cur = conn.cursor()
        try:
            cur.execute("USE DATABASE dev")
            cur.execute("USE SCHEMA analytics")

            create_session_summary_table = """
            CREATE TABLE IF NOT EXISTS analytics.session_summary AS
            SELECT DISTINCT
                usc.userId,
                usc.sessionId,
                usc.channel,
                st.ts
            FROM
                raw_data.user_session_channel usc
            JOIN
                raw_data.session_timestamp st
            ON
                usc.sessionId = st.sessionId;
            """
            cur.execute(create_session_summary_table)
            logging.info("Table analytics.session_summary created successfully with columns userId, sessionId, channel, and ts.")
        except Exception as e:
            logging.error(f"Error creating session summary: {e}")
            raise e
        finally:
            cur.close()
            conn.close()

    # Task dependencies
    create_session_summary_task = create_session_summary()